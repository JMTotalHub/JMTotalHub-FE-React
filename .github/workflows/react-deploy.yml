name: Build and Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v3

    - name: 환경 변수 로드
      id: load-env
      run: |
        echo "${{ secrets.REACT_SERVER01_ENV }}" | while IFS= read -r line; do
          # 주석과 빈 줄 무시
          if [[ -n "$line" && "$line" != \#* ]]; then
            echo "$line" >> $GITHUB_ENV
          fi
        done

    - name: Docker Buildx 설정
      uses: docker/setup-buildx-action@v1

    - name: Docker Hub 로그인
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Docker image 빌드 & 푸쉬
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/jm-total-hub:react-latest
        
    - name: EC2 배포
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.REACT_SERVER01_EC2_HOST }}
        username: ${{ env.REACT_SERVER01_EC2_USERNAME }}
        key: ${{ secrets.REACT_SERVER01_EC2_PRIVATE_KEY }}
        script: |
          docker image prune -a -f --filter "until=12h"
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          export REACT_ENV_STATUS=${{ env.REACT_ENV_STATUS }}
          export REACT_NGINX_SERVER_HOST=${{ env.REACT_NGINX_SERVER_HOST }}
          export REACT_EXPRESS_SERVER01_HOST=${{ env.REACT_EXPRESS_SERVER01_HOST }}
          cd JMTotalHub-DockerCompose
          sudo -E docker-compose pull react 
          sudo -E docker-compose up -d react 
